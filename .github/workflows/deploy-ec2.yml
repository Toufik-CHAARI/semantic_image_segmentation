name: Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build and push Docker image
      run: |
        docker build \
          --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          --build-arg AWS_DEFAULT_REGION="eu-west-3" \
          -t semantic-segmentation-api:latest .
        
        docker tag semantic-segmentation-api:latest \
          ${{ steps.login-ecr.outputs.registry }}/semantic-segmentation-api:latest
        
        docker push ${{ steps.login-ecr.outputs.registry }}/semantic-segmentation-api:latest
        
    - name: Deploy to EC2
      if: secrets.EC2_INSTANCE_ID != ''
      run: |
        echo "Deploying to EC2 instance: ${{ secrets.EC2_INSTANCE_ID }}"
        
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=["docker pull ${{ steps.login-ecr.outputs.registry }}/semantic-segmentation-api:latest", "docker stop semantic-segmentation-container || true", "docker rm semantic-segmentation-container || true", "docker run -d --name semantic-segmentation-container -p 8000:8000 --restart=always ${{ steps.login-ecr.outputs.registry }}/semantic-segmentation-api:latest"]' \
          --region eu-west-3
        
    - name: Output deployment info
      run: |
        echo "Docker image built and pushed to ECR!"
        echo "Image: ${{ steps.login-ecr.outputs.registry }}/semantic-segmentation-api:latest"
        
        if [ "${{ secrets.EC2_INSTANCE_ID }}" != "" ]; then
          EC2_IP=$(aws ec2 describe-instances \
            --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text \
            --region eu-west-3)
          
          echo "API is accessible at: http://$EC2_IP:8000"
        fi
